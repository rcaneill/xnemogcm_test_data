#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master ../../XIOS_user_guide.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement !tph
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Transformation
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "chap:Transformation"

\end_inset

One of a new concept which differentiates XIOS 2.0 from its precedent is
 (spatial) transformation.
 In a simple case, zoom is considered to be a transformation.
 It can be more complicated geometric transformation such as inversion or
 interpolation.
 All transformations are taken place on grid level: it is necessary to define
 a grid source as well as a grid destination, and on this last one we define
 the transformations.
 
\end_layout

\begin_layout Section
Define transformation
\end_layout

\begin_layout Standard
Certainly, the first thing to do is define transformations if we would like
 to use them.
\end_layout

\begin_layout Standard
It is not difficult to define a transformation: include a transformation
 inside grid element (domain, axis, scalar) definition, as the following
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<domain_definition>  
\end_layout

\begin_layout Plain Layout

  <domain id="domain_A_interpolated"> 
\end_layout

\begin_layout Plain Layout

   <interpolated_domain/>
\end_layout

\begin_layout Plain Layout

  </domain>
\end_layout

\begin_layout Plain Layout

</domain_definition>
\end_layout

\begin_layout Plain Layout

<grid id="grid_A_interpolated">
\end_layout

\begin_layout Plain Layout

  <domain domain_ref="domain_A_interpolated"/>
\end_layout

\begin_layout Plain Layout

</grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
or simply, as below
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A_interpolated">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A_interpolated" >
\end_layout

\begin_layout Plain Layout

    <interpolated_domain/>
\end_layout

\begin_layout Plain Layout

   </domain>
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
These concrete examples say out a thing: a grid named grid_A_interpolated
 
\series bold
CAN BE
\series default
 transformed with an interpolation on its domain.
\end_layout

\begin_layout Standard
One obvious question: From which grid is the grid grid_A_interpolated interpolat
ed? XIOS provides a flexible way to specify the grid source on the fly.
\end_layout

\begin_layout Section
Activate transformation
\end_layout

\begin_layout Standard
For taking effect, a transformation must be activated even though it is
 already defined.
\end_layout

\begin_layout Standard
This activation can be done easily by establishing relation between the
 field source, which is on the grid source, and the field destination, which
 is on the grid destination (the grid will be transformed).
\end_layout

\begin_layout Standard
Let grid_A is a grid source and it's defined as following
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A" />
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let field_A is a field on the grid_A
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<field id="field_A" operation="average" freq_op="3600s" grid_ref="grid_A"
 />
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and field_A_interpolated on the grid_A_interpolated
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<field id="field_A_interpolated" operation="average" freq_op="3600s" grid_ref="g
rid_A_interpolated" />
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The transformation between two grids is activated by making a relation between
 the two fields on these grids with 
\series bold
\shape italic
field_ref
\series default
\shape default
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<field id="field_A_interpolated" operation="average" freq_op="3600s" grid_ref="g
rid_A_interpolated" field_ref="field_A" />
\end_layout

\end_inset


\end_layout

\begin_layout Section
Working with FORTRAN
\end_layout

\begin_layout Standard
Like other objects in XIOS, a transformation can be identified with an id
 which allows users to process its attributes via FORTRAN interface.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A_interpolated">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A_intepolated" >
\end_layout

\begin_layout Plain Layout

    <interpolated_domain id="interp_domain" />
\end_layout

\begin_layout Plain Layout

   </domain>
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
All transformation and their attributes can be found in Reference Guide.
\end_layout

\begin_layout Section
Examples
\end_layout

\begin_layout Standard
Example of some common transformations in XIOS.
\end_layout

\begin_layout Subsection
Zoom
\end_layout

\begin_layout Standard
Zoom is available for domain and axis
\end_layout

\begin_layout Standard
Define a grid source
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A" />
\end_layout

\begin_layout Plain Layout

   <axis id="axis_A" />
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Define a grid destination
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A_zoom">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A_zoom" domain_ref="domain_A" >
\end_layout

\begin_layout Plain Layout

    <zoom_domain ibegin="0" ni="10" jbegin="0" nj="10" />
\end_layout

\begin_layout Plain Layout

   </domain>
\end_layout

\begin_layout Plain Layout

   <axis id="axis_A_zoom" axis_ref="axis_A">
\end_layout

\begin_layout Plain Layout

    <zoom_axis begin="0" n="10"/>
\end_layout

\begin_layout Plain Layout

   </axis>
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Activate zoom
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<field id="field_A" operation="average" freq_op="3600s" grid_ref="grid_A"
 />
\end_layout

\begin_layout Plain Layout

<field id="field_A_zoom" grid_ref="grid_A_zoom" field_ref="field_A" />
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Transformation are done with the order of their definition.
 In the above example, the domain is zoomed first then the zoom on axis
 is applied.
\end_layout

\begin_layout Subsection
Interpolation
\end_layout

\begin_layout Standard
Interpolation is available for domain and axis
\end_layout

\begin_layout Standard
Define a grid source
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A" />
\end_layout

\begin_layout Plain Layout

   <axis id="axis_A" />
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Define a grid destination
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A_interpolated">          
\end_layout

\begin_layout Plain Layout

   <domain id="domain_A_interpolated" >
\end_layout

\begin_layout Plain Layout

    <interpolate_domain/>
\end_layout

\begin_layout Plain Layout

    <zoom_domain ibegin="0" ni="10" jbegin="0" nj="10" />
\end_layout

\begin_layout Plain Layout

   </domain>
\end_layout

\begin_layout Plain Layout

   <axis id="axis_A" />
\end_layout

\begin_layout Plain Layout

 </grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Activate transformations
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<field id="field_A" operation="average" freq_op="3600s" grid_ref="grid_A"
 />
\end_layout

\begin_layout Plain Layout

<field id="field_A_interpolated" grid_ref="grid_A_interpolated" field_ref="field
_A" />
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sequence of transformation can be defined in a grid.
 In the above example, the domain_A is interpolated into domain_A_interpolated
 on which a zoom is then applied.
\end_layout

\end_body
\end_document
