#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Scalar transformation attribute reference
\end_layout

\begin_layout Subsection
reduce_domain
\end_layout

\begin_layout Standard
Reduce a domain into a scalar.
\end_layout

\begin_layout Subsection*
operation: 
\emph on
enumeration { min, max, sum, average }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: operation
\end_layout

\begin_layout Standard
Define the reduction operation can be done.
 This attribute is mandatory
\end_layout

\begin_layout Subsection
reduce_axis
\end_layout

\begin_layout Standard
Reduce an axis into a scalar.
\end_layout

\begin_layout Subsection*
operation: 
\emph on
enumeration { min, max, sum, average }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: operation
\end_layout

\begin_layout Standard
Define the reduction operation can be done.
 This attribute is mandatory
\end_layout

\begin_layout Subsection
extract_axis
\end_layout

\begin_layout Standard
Extract a point on an axis into a scalar
\end_layout

\begin_layout Subsection*
position: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: position
\end_layout

\begin_layout Standard
Position on the axis where the extraction is done.
 This attribute is mandatory.
\end_layout

\begin_layout Section
Axis transformation attribute reference
\end_layout

\begin_layout Subsection
interpolate_axis
\end_layout

\begin_layout Standard
Interpolate an axis into another one.
\end_layout

\begin_layout Subsection*
type: 
\emph on
string
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: type
\end_layout

\begin_layout Standard
Define the type of interpolation on an axis.
 This attribute is optional.
 Default type is Lagrange 
\end_layout

\begin_layout Subsection*
order: 
\emph on
integer
\end_layout

\begin_layout Standard
Fortran: 
\end_layout

\begin_layout LyX-Code
INTEGER :: order
\end_layout

\begin_layout Standard
Define a order of interpolation.
 This attribute is optional.
 The default value is 2.
\end_layout

\begin_layout Subsection*
coordinate: 
\emph on
string
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: coordinate
\end_layout

\begin_layout Standard
Define the coordinate from which we do interpolation.
 This coordinate should be a 3D field which is on the grid containing the
 interpolating axis.
 This attribute is optional.
 
\end_layout

\begin_layout Subsection
inverse_axis
\end_layout

\begin_layout Standard
Turn an axis into another axis whose values are inversed from the original
 one
\end_layout

\begin_layout Subsection
zoom_axis
\end_layout

\begin_layout Standard
Zoom into a potion of an axis
\end_layout

\begin_layout Subsection*
begin: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: begin
\end_layout

\begin_layout Standard
Define the beginning index of the zoomed region on global axis.
 This attribute is optional.
 This must be an integer between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
n_glo-1
\end_layout

\end_inset

 of associated axis.
 If not specified the default value is 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
n: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: n
\end_layout

\begin_layout Standard
Define the size of zoomed region on global axis.
 This attribute is optional.
 This must be an integer between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
n_glo
\end_layout

\end_inset

 of the associated axis.
 If not specified the default value is 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
n_glo
\end_layout

\end_inset

 of the associated axis.
\end_layout

\begin_layout Subsection*
index: 
\emph on
1D-array of
\emph default
 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: index(:)
\end_layout

\begin_layout Standard
Array contains the zoomed point on the global axis.
 This attribute is optional.
 This must contain only integer values between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
n_glo-1
\end_layout

\end_inset

 of the associated axis.
 If not specified, begin and n are used for zoom of the associated axis.
\end_layout

\begin_layout Subsection
reduce_domain
\end_layout

\begin_layout Standard
Reduce a domain into an axis following a dimension of the domain
\end_layout

\begin_layout Subsection*
operation: 
\emph on
enumeration { min, max, sum, average }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: operation
\end_layout

\begin_layout Standard
Define the reduction operation can be done.
 This attribute is mandatory
\end_layout

\begin_layout Subsection*
direction: 
\emph on
enumeration { iDir, jDir }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: direction
\end_layout

\begin_layout Standard
Define the dimension of domain along which the reduction operation is done:
 
\end_layout

\begin_layout Itemize

\series bold
\emph on
jDir
\series default
\emph default
: reduction along y dimension of domain
\end_layout

\begin_layout Itemize

\series bold
\emph on
iDir
\series default
\emph default
: reduction along x dimension of domain.
\end_layout

\begin_layout Standard
This attribute is mandatory.
\end_layout

\begin_layout Subsection
extract_domain
\end_layout

\begin_layout Standard
Extract a slice of domain into an axis following a dimension of the domain
\end_layout

\begin_layout Subsection*
direction: 
\emph on
enumeration { iDir, jDir }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: direction
\end_layout

\begin_layout Standard
Define the dimension of domain along which the extraction operation is done:
 
\end_layout

\begin_layout Itemize

\series bold
\emph on
jDir
\series default
\emph default
: extract along y dimension of domain
\end_layout

\begin_layout Itemize

\series bold
\emph on
iDir
\series default
\emph default
: extract along x dimension of domain.
\end_layout

\begin_layout Standard
This attribute is mandatory.
\end_layout

\begin_layout Subsection*
position: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: position
\end_layout

\begin_layout Standard
Position on the dimension of domain with which the extraction is done.
 This attribute is mandatory.
\end_layout

\begin_layout Section
Domain transformation attribute reference
\end_layout

\begin_layout Subsection
interpolate_domain
\end_layout

\begin_layout Standard
Interpolate a domain to another one.
\end_layout

\begin_layout Subsection*
order: 
\emph on
integer
\end_layout

\begin_layout Standard
Fortran: 
\end_layout

\begin_layout LyX-Code
INTEGER :: order
\end_layout

\begin_layout Standard
Define the order of interpolation.
 This attribute is optional.
 The default value is 2.
\end_layout

\begin_layout Subsection*
renormalize: 
\emph on
bool
\end_layout

\begin_layout Standard
Fortran: 
\end_layout

\begin_layout LyX-Code
LOGICAL :: renormalize
\end_layout

\begin_layout Standard
Define if interpolation normalization is applied.
 This attribute is optional.
 The default value is false.
\end_layout

\begin_layout Subsection*
write_weight: 
\emph on
bool
\end_layout

\begin_layout Standard
Fortran: 
\end_layout

\begin_layout LyX-Code
LOGICAL :: write_weight
\end_layout

\begin_layout Standard
Define if the weights of interpolation calculation are written into a file.
 This attribute is optional.
 The default value is false.
\end_layout

\begin_layout Subsection*
weight_filename: 
\emph on
string
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: weight_filename
\end_layout

\begin_layout Standard
Define the filename into which the calculated weights of interpolation are
 written or from which these weights are read.
 This attribute is optional.
\end_layout

\begin_layout Subsection*
mode: 
\emph on
enumeration { compute, read, read_or_compute }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: mode
\end_layout

\begin_layout Standard
Define the operation mode of interpolation:
\end_layout

\begin_layout Itemize

\series bold
\emph on
compute
\series default
\emph default
: compute the weights of interpolation
\end_layout

\begin_layout Itemize

\series bold
\emph on
read
\series default
\emph default
: read the weights of interpolation from a file whose name is defined by
 weight_filename
\end_layout

\begin_layout Itemize

\series bold
\emph on
read_or_compute
\series default
\emph default
: if the file whose name is defined by weight_filename already exists, read
 the weights of interpolation from this file; otherwise weights of interpolation
 are computed.
\end_layout

\begin_layout Standard
In mode compute and read_or_compute, weight_filename is not defined, filename
 whose format
\end_layout

\begin_layout Standard
xios_interpolation_weight_nameOfContext_nameOfDomainSource_nameOfDomainDestinati
on.nc will be used for read/write.
\end_layout

\begin_layout Subsection
zoom_domain
\end_layout

\begin_layout Subsection*
ibegin: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: ibegin
\end_layout

\begin_layout Standard
Define the beginning index of the zoomed region on the first dimension of
 the global domain.
 This attribute is optional.
 This must be an integer between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
ni_glo-1
\end_layout

\end_inset

 of the associated dimension of domain.
 If not specified the default value is 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
ni: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: ni
\end_layout

\begin_layout Standard
Define the size of zoomed region on the first dimension of the global domain.
 This attribute is optional.
 This must be an integer between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
ni_glo
\end_layout

\end_inset

 of the associated dimension of domain.
 If not specified the default value is 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
ni_glo
\end_layout

\end_inset

 of the dimension of domain.
\end_layout

\begin_layout Subsection*
jbegin: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: jbegin
\end_layout

\begin_layout Standard
Define the beginning index of the zoomed region on the second dimension
 of the global domain.
 This attribute is optional.
 This must be an integer between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
nj_glo-1
\end_layout

\end_inset

 of the associated dimension of domain.
 If not specified the default value is 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
nj: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: nj
\end_layout

\begin_layout Standard
Define the size of zoomed region on the second dimension of the global domain.
 This attribute is optional.
 This must be an integer between 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

and 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
nj_glo
\end_layout

\end_inset

 of the associated dimension of domain.
 If not specified the default value is 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
nj_glo
\end_layout

\end_inset

 of the dimension of domain.
\end_layout

\begin_layout Subsection
generate_rectilinear_domain
\end_layout

\begin_layout Standard
Generate a rectilinear domain on distributing it among processes as well
 as on automatically generating its attributes.
 By default, the bounds_* attributes are used to compute latitude and longitude
 of the generated domain.
\end_layout

\begin_layout Subsection*
lon_start: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: lon_start
\end_layout

\begin_layout Standard
Define the beginning of the longitude of the global domain.
 This attribute is optional.
 
\end_layout

\begin_layout Subsection*
lon_end: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: lon_end
\end_layout

\begin_layout Standard
Define the ending of the longitude of the global domain.
 This attribute is optional.
 
\end_layout

\begin_layout Subsection*
lat_start: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: lat_start
\end_layout

\begin_layout Standard
Define the beginning of the latitude of the global domain.
 This attribute is optional.
 
\end_layout

\begin_layout Subsection*
lat_end: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: lat_end
\end_layout

\begin_layout Standard
Define the ending of the latitude of the global domain.
 This attribute is optional.
 
\end_layout

\begin_layout Subsection*
bounds_lon_start: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: bounds_lon_start
\end_layout

\begin_layout Standard
Define the beginning of the longitude of the boundary of the global domain.
 This attribute is optional.
 By default, it is 0.
\end_layout

\begin_layout Subsection*
bounds_lon_end: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: bounds_lon_end
\end_layout

\begin_layout Standard
Define the ending of the longitude of the boundary of the global domain.
 This attribute is optional.
 By default, it is 360.
\end_layout

\begin_layout Subsection*
bounds_lat_start: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: bounds_lat_start
\end_layout

\begin_layout Standard
Define the beginning of the latitude of the boundary of the global domain.
 This attribute is optional.
 By default, it is -90.
\end_layout

\begin_layout Subsection*
bounds_lat_end: double
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
DOUBLE PRECISION :: bounds_lat_end
\end_layout

\begin_layout Standard
Define the ending of the latitude of the boundary of the global domain.
 This attribute is optional.
 By default, it is +90.
\end_layout

\begin_layout Subsection
compute_connectivity_domain
\end_layout

\begin_layout Standard
Compute the neighbors of cells on the local domain.
\end_layout

\begin_layout Subsection*
type: 
\emph on
enumeration { node, edge }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: type
\end_layout

\begin_layout Standard
Define the type of neighbor: 
\end_layout

\begin_layout Itemize

\series bold
\emph on
node
\series default
\emph default
: cells sharing a node are considered neighbors
\end_layout

\begin_layout Itemize

\series bold
\emph on
edge
\series default
\emph default
: cells sharing an edge are considered neighbors.
\end_layout

\begin_layout Standard
This attribute is optional.
 Default value is edge.
\end_layout

\begin_layout Subsection*
n_neighbor_max: 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: n_neighbor_max
\end_layout

\begin_layout Standard
Attribute contains maximum number of neighbor a cell on the local domain
 can have.
 This attribute contains returned value.
\end_layout

\begin_layout Subsection*
n_neighbor: 
\emph on
1D-array of
\emph default
 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: n_neighbor(:)
\end_layout

\begin_layout Standard
Array contains the calculate number of neighbor for cells on the domain.
 This attribute contains returned values.
\end_layout

\begin_layout Subsection*
local_neighbor: 
\emph on
2D-array of
\emph default
 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
INTEGER :: n_neighbor(:)
\end_layout

\begin_layout Standard
Array contains the neighbor for cells on the domain.
 This attribute contains returned values.
\end_layout

\begin_layout Subsection
expand_domain
\end_layout

\begin_layout Standard
Expand a local domain on adding cells from its neighboring domains.
\end_layout

\begin_layout Standard
For rectilinear domain, global domain is also expanded.
 By default, the expanded part is masked.
\end_layout

\begin_layout Subsection*
type: 
\emph on
enumeration { node, edge }
\end_layout

\begin_layout Standard
Fortran:
\end_layout

\begin_layout LyX-Code
CHARACTER(LEN=*) :: type
\end_layout

\begin_layout Standard
Define the type of neighbor: 
\end_layout

\begin_layout Itemize

\series bold
\emph on
node
\series default
\emph default
: cells sharing a node are considered neighbors
\end_layout

\begin_layout Itemize

\series bold
\emph on
edge
\series default
\emph default
: cells sharing an edge are considered neighbors.
\end_layout

\begin_layout Standard
This attribute is optional.
 Default value is edge.
\end_layout

\begin_layout Subsection*
i_periodic: 
\emph on
bool
\end_layout

\begin_layout Standard
Fortran: 
\end_layout

\begin_layout LyX-Code
LOGICAL :: i_periodic
\end_layout

\begin_layout Standard
For rectilinear domain, specify if the domain is periodic along x dimension.
 This attribute is optional.
 The default value is false.
\end_layout

\begin_layout Subsection*
j_periodic: 
\emph on
bool
\end_layout

\begin_layout Standard
Fortran: 
\end_layout

\begin_layout LyX-Code
LOGICAL :: j_periodic
\end_layout

\begin_layout Standard
For rectilinear domain, specify if the domain is periodic along y dimension.
 This attribute is optional.
 The default value is false.
\end_layout

\end_body
\end_document
