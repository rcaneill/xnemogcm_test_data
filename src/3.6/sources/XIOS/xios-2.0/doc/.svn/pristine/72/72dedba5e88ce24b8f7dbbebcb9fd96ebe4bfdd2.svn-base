#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\master ../../XIOS_user_guide.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement !tph
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Scalar
\end_layout

\begin_layout Standard
Scalar, as its name, representing zero-dimension data, is a new element
 in XIOS 2.0
\end_layout

\begin_layout Section
Working with configuration file
\end_layout

\begin_layout Standard
Scalar can be easily defined in the configuration file and in most case,
 that should be enough.
\end_layout

\begin_layout Standard
Scalar is defined inside its definition part with the tag 
\series bold
\color black
scalar_definition
\series default
\color inherit
.
 
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<scalar_definition>
\end_layout

\begin_layout Plain Layout

  <scalar id="scalar_A" />
\end_layout

\begin_layout Plain Layout

  <axis scalar_ref="scalar_A" />
\end_layout

\begin_layout Plain Layout

</scalar_definition>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first one is to specify explicitly identification of a scalar with an
 id.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<scalar_definition>
\end_layout

\begin_layout Plain Layout

  <scalar id="scalar_A" />  
\end_layout

\begin_layout Plain Layout

</scalar_definition>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this way, with the id, the scalar can be processed, e.x modified its attribute
s, with Fortran interface; besides, it is only possible to reference to
 a scalar whose id is explicitly defined.
\end_layout

\begin_layout Standard
To make a reference to a scalar, we use 
\shape italic
scalar_ref
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<scalar_definition>
\end_layout

\begin_layout Plain Layout

  <scalar scalar_ref="scalar_A" />
\end_layout

\begin_layout Plain Layout

</scalar_definition>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A scalar defined by scalar_ref will inherit all attributes of the referenced
 one, except its id attribute.
 If there is no id specified, an implicit one is assigned to this new scalar.
 The scalar with implicit id can only be used inside the scope where it
 is defined, it can not be referenced, nor be processed.
 It is useless to define an scalar without id inside scalar_definition.
 
\end_layout

\begin_layout Standard
To define a new scalar inside a grid, we use the tag 
\series bold
\color black
scalar.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,breaklines=true,tabsize=2,frame=tb,postbreak={\raisebox{0ex}[0ex][0ex]{\ensuremath{\rcurvearrowse\space}}}"
inline false
status open

\begin_layout Plain Layout

<grid id="grid_A">          
\end_layout

\begin_layout Plain Layout

   <scalar scalar_ref="scalar_A" />
\end_layout

\begin_layout Plain Layout

</grid>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The xml lines above can be translated as: the grid_A composed of an scalar_A
 that is defined somewhere else before.
 More precisely, the grid grid_A is constituted of an 
\begin_inset Quotes eld
\end_inset

unknown id
\begin_inset Quotes erd
\end_inset

 scalar which has inherited all attributes (and their values) from scalar_A
 (name, ...
 etc).
\end_layout

\begin_layout Section
Working with FORTRAN code
\end_layout

\begin_layout Standard
All attributes of scalar can be found in Reference Guide.
\end_layout

\end_body
\end_document
