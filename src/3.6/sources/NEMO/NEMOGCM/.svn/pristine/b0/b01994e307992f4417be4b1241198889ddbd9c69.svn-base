#!/bin/bash
#MSUB -T 3600                # elapsed time limit in seconds   (60 minutes)
#MSUB -r SETTE_JOB           # Job name
#MSUB -o sette.jobid_%I.txt  # standard output
#MSUB -e sette.jobid_%I.txt  # standard error

#======   Thin nodes (1 node = 2 * 8 procs) :   
#MSUB -n NPROCS              # Total number of mpi task to use
####  #MSUB -N 2                   # number of nodes to use
#MSUB -ra2286             # project name
#MSUB -q standard            # (queue name) only for thin nodes
##########################################################################
#
# Test specific settings. Do not hand edit these lines; the fcm_job.sh script will set these
# (via sed operating on this template job file). 
#
  OCEANCORES=NPROCS
  export SETTE_DIR=DEF_SETTE_DIR
#
# set up mpp computing environment
#
# Local settings for machine BULL (TITANE at CCRT France)
#
export MPIRUN="mpirun -np $OCEANCORES"

#
# load sette functions (only post_test_tidyup needed)
#
  . ${SETTE_DIR}/all_functions.sh
#

# modules to load
module unload netcdf
module unload hdf5
module load netcdf/4.3.3.1_hdf5_parallel
module load hdf5/1.8.12_parallel

# Don't remove neither change the following line
# BODY

#
# These variables are needed by post_test_tidyup function in all_functions.sh
#
  export EXE_DIR=DEF_EXE_DIR
  export INPUT_DIR=DEF_INPUT_DIR
  export CONFIG_DIR=DEF_CONFIG_DIR
  export NEMO_VALIDATION_DIR=DEF_NEMO_VALIDATION
  export NEW_CONF=DEF_NEW_CONF
  export CMP_NAM=DEF_CMP_NAM
  export TEST_NAME=DEF_TEST_NAME
#
# end of set up
###############################################################
#
# change to the working directory 
#
cd ${EXE_DIR}

  echo Running on host `hostname`
  echo Time is `date`
  echo Directory is `pwd`
# 
#  Run the parallel MPI executable 
#
  echo "Running time ${MPIRUN} ./opa"
#
  if [ MPI_FLAG == "yes" ]; then
     time ${MPIRUN} ./opa
  else
     time ./opa
  fi

#
  post_test_tidyup

# END_BODY
# Don't remove neither change the previous line


  exit

