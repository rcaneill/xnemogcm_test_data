<!DOCTYPE html>
<html>
    <head>
        <metacharset="utf-8"/>
        <link rel="stylesheet" href="xios-style.css"/>
        <title>XIOS Unit Tests Report - Le Site Web</title>
        
        <script src="https://forge.ipsl.jussieu.fr/ioserver/chrome/site/XIOS_TEST_SUITE/generate_compile_table.js" type="text/javascript"></script>
        <script src="https://forge.ipsl.jussieu.fr/ioserver/chrome/site/XIOS_TEST_SUITE/generate_test_table.js" type="text/javascript"></script>

        <script src="https://vesg.ipsl.upmc.fr/thredds/fileServer/work/p86yann/XIOS_TEST_SUITE/compile_irene_info.js" type="text/javascript"></script>
        <script src="https://vesg.ipsl.upmc.fr/thredds/fileServer/work/p86yann/XIOS_TEST_SUITE/test_irene_info.js" type="text/javascript"></script>

        <script src="https://forge.ipsl.jussieu.fr/ioserver/chrome/site/XIOS_TEST_SUITE/compile_jeanzay_info.js" type="text/javascript"></script>
        <script src="https://forge.ipsl.jussieu.fr/ioserver/chrome/site/XIOS_TEST_SUITE/test_jeanzay_info.js" type="text/javascript"></script>

    </head>

    <body onload="generateCompileTable(); generateTestTable(); ">
        
        <header>
            <h1>XIOS Unit Tests Report Web Page</h1>
            <!-- <h2>(still under construction ... ...)</h2> -->
        </header>

        <nav>
            <div>
                <!-- <p id="xiosinfo">Some useful links:</p> -->
                <ul>
                    <li><a href="https://forge.ipsl.jussieu.fr/ioserver/wiki" target="_blank">XIOS wiki page</a></li>
                    <li><a href="graph.html" target="_blank">Workflow Graph Visualizer</a></li>
                </ul> 
            </div>        
        </nav> 

    

        <section>

            <!-- <h2>Results of unit tests</h2> -->

            <form method="post" style="margin-left: 25px;">

                <p><label for="Build revision">Choose a revision number to show compile and test results : </label>
                    <select name="revision" id="revision">
                        <option value="0" selected>All available revisions ...</option>
                    </select>
                </p>

            </form>


            <ul>
                <li>&#10060; : compile failed / test failed</li>
                <li>&#10067; : test result initialized</li>
                <li>&#9989; : compile passed / test passed</li></ul>

        </section>

        <section>


            <div>
                <table id="compile_table" style="margin: 50px;">
                    <caption>Table of XIOS Compile status</caption>
                    <tr style="font-weight: bold;" id="compile_table_row0"></tr>
                </table>
            </div>    


            <div style="margin-top: 100px;">
                <table id="test_table" style="margin: 50px;">
                    <caption>Table of XIOS unit tests results</caption>
                    <tr style="font-weight: bold;" id="test_table_row0"></tr>
                </table>
            </div>


        </section>


        <footer>
            <p>Copyright XIOS - Tous droits réservés
                <a href="mailto:xios-dev@forge.ipsl.jussieu.fr">Nous contacter !</a>
            </p>
        </footer>
    </body>
</html>
 
<script>

    var params = "scrollbars=yes,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=600,height=300,left=100,top=100";

    function show_text(the_text) 
    {
        window.open("about:blank", "", params).document.write(the_text);  
    }

    function show_user_params(machine, revision, build_dir, algo)
    {
        var user_params = eval("test_"+machine+"_"+revision+"_"+algo+"_user_params")
        var myText = "<p style=\"color:blue;font-weight:bold;\">user_params.def for "+algo+"</p><p>"
        for (var i=0; i<user_params.length; i++)
        {
            myText += user_params[i]+"</br>"
        }
        myText+="</p>"
        window.open("about:blank", "", params).document.write(myText);
    }

    function show_all_params(machine, revision, build_dir, algo, config)
    {
        var config_name = config.replace(/=/g,"_")
        var all_params = eval("test_"+machine+"_"+revision+"_"+algo+"_"+config_name+"_all_params")
        var myText = "<p style=\"color:blue;font-weight:bold;\">all_param.def for "+algo+"/"+config+"</p><p>"
        for (var i=0; i<all_params.length; i++)
        {
            myText += all_params[i]+"</br>"
        }
        myText+="</p>"
        window.open("about:blank", "", params).document.write(myText); 
    }


    function show_plain_report(machine, revision, build_dir)
    {
        var info_list = eval("test_"+machine+"_"+revision+"_"+build_dir.replace("build_",""))
        var myText = "<p style=\"color:blue;\">Revision = "+revision+"</br>Machine = "+machine+"<br>Build_dir ="+build_dir+"</p>"
        for (var i=0; i<info_list.length; i++)
        {
            myText+="<P>"
            for (var j=0; j<4; j++)
            {
                myText+=info_list[i][j]+" "
            }
            myText+="</p>"
        }
        window.open("about:blank", "", params).document.write(myText);
    }
    
    function show_dropdown(dropdown_id)
    {
        var cell = document.getElementById(dropdown_id);
        if (cell)
        {
            cell.classList.add("showit")
        }
    }

    function hide_dropdown(dropdown_id)
    {
        var cell = document.getElementById(dropdown_id);
        if (cell)
        {
            cell.classList.remove("showit")
        }
    }
    
    
</script>


<script>

    document.getElementById("revision").addEventListener("change", myFunction);
    
    function myFunction() 
    {
        if(this.value == 0)
        {
            // compile part ...

            var ans = document.getElementsByClassName('compile_table_row')
            for (var i = 0; i < ans.length; i++)
            {
                cell = ans[i]
                cell.classList.remove('hide')
                cell.classList.add('show')
            }
            document.getElementById("empty_compile_row").style.display="none"

            // test part ...

            var ans = document.getElementsByClassName('test_table_row')
            for (var i = 0; i < ans.length; i++)
            {
                cell = ans[i]
                cell.classList.remove('hide')
                cell.classList.add('show')
            }
            document.getElementById("empty_test_row").style.display="none"
        }
        
        else
        {
            // compile part ...

            var ans = document.getElementsByClassName('compile_table_row')
            for (var i = 0; i < ans.length; i++)
            {
                cell = ans[i]
                cell.classList.remove('show')
                cell.classList.add('hide')
            }
            document.getElementById("empty_compile_row").style.display="none"

            var ans = document.getElementById('compile_table_'+this.value)
            if(ans)
            {
                ans.classList.remove('hide')
                ans.classList.add('show')
            } 
            else
            {
                document.getElementById("empty_compile_row_revision").innerHTML=this.value
                document.getElementById("empty_compile_row").style.display="table-row"
            } 

            
            // test part ...
            
            var ans = document.getElementsByClassName('test_table_row')
            for (var i = 0; i < ans.length; i++)
            {
                cell = ans[i]
                cell.classList.remove('show')
                cell.classList.add('hide')
            }
            document.getElementById("empty_test_row").style.display="none"
            
            var ans = document.getElementById('test_table_'+this.value)
            if(ans)
            {
                ans.classList.remove('hide')
                ans.classList.add('show')
            } 
            else
            {
                document.getElementById("empty_test_row_revision").innerHTML=this.value
                document.getElementById("empty_test_row").style.display="table-row"
            } 
        }
    }
</script>


<script>

    function level0_toggle(machine, my_revision) {
        var level1_ans = document.getElementsByClassName('table_'+machine+'_'+my_revision+"_build_level")
        for (var i = 0; i < level1_ans.length; i++) 
        {
            var cell = level1_ans[i]
            if (cell.style.display != 'table-row')
            {
                cell.style.display = 'table-row'
            }
            else
            {
                cell.style.display = 'none'
            }

            buildType = cell.getAttribute("data-build-type");
            var level2_ans = document.getElementsByClassName(buildType+"_algo_level")
            for (var j = 0; j < level2_ans.length; j++)
            {
                var cell = level2_ans[j]
                cell.style.display = 'none'
                algoType = cell.getAttribute("data-algo-type");
                var level3_ans =  document.getElementsByClassName(algoType+"_config_level")
                for (var k = 0; k < level3_ans.length; k++)
                {
                    var cell = level3_ans[k]
                    cell.style.display = 'none'
                    configType = cell.getAttribute("data-config-type")
                    var level4_ans = document.getElementsByClassName(configType+"_file_level")
                    for (var h = 0; h<level4_ans.length; h++) 
                    {
                        level4_ans[h].style.display = "none"
                    }
                }
            }    
        }
    }



    function level1_toggle(machine, my_revision, build_dir) {
        var level2_ans = document.getElementsByClassName('table_'+machine+'_'+my_revision+"_"+build_dir+"_algo_level")
        for (var i = 0; i < level2_ans.length; i++) 
        {
            var cell = level2_ans[i]
            if (cell.style.display != 'table-row')
            {
                cell.style.display = 'table-row'
            }
            else
            {
                cell.style.display = 'none'
            }
            algoType = cell.getAttribute("data-algo-type")
            var level3_ans = document.getElementsByClassName(algoType+"_config_level")
            for (var j = 0; j < level3_ans.length; j++)
            {
                var cell = level3_ans[j]
                cell.style.display = 'none'
                configType = cell.getAttribute("data-config-type")
                var level4_ans = document.getElementsByClassName(configType+"_file_level")
                for (var k = 0; k<level4_ans.length; k++) 
                {
                    level4_ans[k].style.display = "none"
                }
            }
        }
    }



    function level2_toggle(machine, my_revision, build_dir, algo_name) {
        var level3_ans = document.getElementsByClassName('table_'+machine+'_'+my_revision+"_"+build_dir+"_"+algo_name+"_config_level")
        for (var i = 0; i < level3_ans.length; i++) 
        {
            var cell = level3_ans[i]
            if (cell.style.display != 'table-row')
            {
                cell.style.display = 'table-row'   
            }
            else
            {
                cell.style.display = 'none'
            }
            configType = cell.getAttribute("data-config-type")
            var level4_ans = document.getElementsByClassName(configType+"_file_level")
            for (var j = 0; j<level4_ans.length; j++) 
            {
                level4_ans[j].style.display = "none"
            }
        }
    }


    function level3_toggle(machine, my_revision, build_dir, algo_name, config_name) {
        var level4_ans = document.getElementsByClassName('table_'+machine+'_'+my_revision+"_"+build_dir+"_"+algo_name+"_"+config_name+"_file_level")
        for (var i = 0; i < level4_ans.length; i++) 
        {
            var cell = level4_ans[i]
            if (cell.style.display != 'table-row')
            {
                cell.style.display = 'table-row'
            }
            else
            {
                cell.style.display = 'none'
            }
        }
    }

    

</script>

